{
  "version": 3,
  "sources": ["empty-module:./session.server", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "import type { MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { json } from \"@remix-run/node\";\n\n\nimport { getUser, getSession, sessionStorage } from \"./session.server\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport async function loader({ request }: LoaderArgs) {\n  const session = await getSession(request);\n\n  return json({\n    headers: {\n      // only necessary with cookieSessionStorage\n      \"Set-Cookie\": await sessionStorage.commitSession(session),\n    },\n    user: await getUser(request),\n  });\n}\n\nexport default function App() {\n  const { user } = useLoaderData();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACMlB,qBAAoD;AAmC5C;AAxBD,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ;AAce,SAAR,MAAuB;AAC5B,QAAM,EAAE,KAAK,IAAI,cAAc;AAE/B,SACE,mDAAC,UAAK,MAAK,MACT;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;",
  "names": []
}
